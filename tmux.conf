# shortcut key is ctrl-a
# Mapping caps lock to ctrl makes this a very easy key combo to use.
# To do so on Gnome:
# - open Tweak Tool -> Typing -> Caps Lock Key Behaviour
# - choose "Make Caps Lock an additional Ctrl"
# On macOS:
# - System Preferences -> Keyboard -> Modifier Keys
# - change Caps Lock to Control
set -g prefix C-a
# send a second ctrl-a through to the contained application:
bind C-a send-prefix

# Reload configuration with r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# count windows from 1 instead of 0
# makes windows match up with the keyboard
set -g base-index 1
#setw -g base-pane-index 1

# better pane splitting:
bind | split-window -h
bind - split-window -v

# vim-like pane movement:
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# cycle through windows:
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# repeatable quick pane resizing:
# This is the same as pane movement, but capitalized
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Allow tmux to use 256 colors.  Not entirely sure
# why it doesn't do this in the first place...
set -g default-terminal "screen-256color"

# status line tweaking
set -g status-style fg=white,bg=brightblack
setw -g window-status-current-style bold
set -g message-style fg=white,bold,bg=brightblack
# More readable date format.
# Remove pane title (aka local host name, which isn't interesting)
set -g status-right " %Y-%m-%d %H:%M"
# Remove session name, since I normally only have one.
set -g status-left " "

# vi mode for working with buffer, plus some additional help:
setw -g mode-keys vi
unbind p
# `-p` => bracketed paste mode (eg, tell vim not to interpret ctrl characters)
bind p paste-buffer -p
bind -T copy-mode-vi "v" send-keys -X begin-selection
bind -T copy-mode-vi "y" send-keys -X copy-selection-and-cancel

# C-a C-c copies text to X clipboard.
# Steps to copy from a terminal:
# - C-a [ -> enter copy mode
# - vim keys v and y to select and yank text
# - C-a C-c -> copy to clipboard
# Gnome terminal seems to block C-a after doing this selection,
# making it impossible to control tmux.  Reconnecting to the session from
# a new tab seems to fix the problem...
# TODO: replace with macOS equivalent
# TODO: configure https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# C-a C-v pastes text from X clipboard:
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
